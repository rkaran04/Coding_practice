

// LOGIC: we randomly pick a word from the array. Based on how many matches we flter put the words list so that only those words 
// remain wich have the same exact match with the guessed word as the secret word. Then we randomly pick from the new list and continue this way.
//rand() helps, srand(time(0)) different seed everytime, so we dont generate similar indices. 



class Solution {
public:

    void findSecretWord(vector<string>& words, Master& master) {
        srand(time(0));

        for(int i=0;i<30;i++){
            int n=words.size();
            cout<<n<<endl;
            int ind=rand()%n; //random numner between 0 - n-1
            int match=master.guess(words[ind]);
            if(match==6) return;

            vector<string>temp;
            for(auto it:words){
                int m=0;
                for(int j=0;j<6;j++){
                    if(words[ind][j]==it[j]) m++;
                }
                if(m==match) temp.push_back(it);
            }

            words=temp;  
            random_shuffle(words.begin(),words.end());  
        }


    }
};
